
package com.smartbt.vtsuite.boundary.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "TLS", targetNamespace = "http://web.service.fileloader.tc.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface TLS {


    /**
     * 
     * @param amount
     * @param username
     * @param locationId
     * @param depositId
     * @param notes
     * @param password
     * @return
     *     returns com.smartbt.vtsuite.boundary.ws.TransactionLoaderReply
     * @throws WSServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "refund", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.Refund")
    @ResponseWrapper(localName = "refundResponse", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.RefundResponse")
    @Action(input = "http://web.service.fileloader.tc.com/TLS/refundRequest", output = "http://web.service.fileloader.tc.com/TLS/refundResponse", fault = {
        @FaultAction(className = WSServiceException.class, value = "http://web.service.fileloader.tc.com/TLS/refund/Fault/WSServiceException")
    })
    public TransactionLoaderReply refund(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "depositId", targetNamespace = "")
        String depositId,
        @WebParam(name = "locationId", targetNamespace = "")
        String locationId,
        @WebParam(name = "amount", targetNamespace = "")
        String amount,
        @WebParam(name = "notes", targetNamespace = "")
        String notes)
        throws WSServiceException
    ;

    /**
     * 
     * @param amount
     * @param username
     * @param locationId
     * @param returnId
     * @param password
     * @return
     *     returns com.smartbt.vtsuite.boundary.ws.TransactionLoaderReply
     * @throws WSServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "resubmit", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.Resubmit")
    @ResponseWrapper(localName = "resubmitResponse", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.ResubmitResponse")
    @Action(input = "http://web.service.fileloader.tc.com/TLS/resubmitRequest", output = "http://web.service.fileloader.tc.com/TLS/resubmitResponse", fault = {
        @FaultAction(className = WSServiceException.class, value = "http://web.service.fileloader.tc.com/TLS/resubmit/Fault/WSServiceException")
    })
    public TransactionLoaderReply resubmit(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "locationId", targetNamespace = "")
        String locationId,
        @WebParam(name = "amount", targetNamespace = "")
        String amount,
        @WebParam(name = "returnId", targetNamespace = "")
        String returnId)
        throws WSServiceException
    ;

    /**
     * 
     * @param amount
     * @param aba
     * @param dda
     * @param username
     * @param depositName
     * @param name
     * @param locationId
     * @param accountType
     * @param password
     * @param creditOrDebit
     * @return
     *     returns com.smartbt.vtsuite.boundary.ws.TransactionLoaderReply
     * @throws WSServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendACH", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.SendACH")
    @ResponseWrapper(localName = "sendACHResponse", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.SendACHResponse")
    @Action(input = "http://web.service.fileloader.tc.com/TLS/sendACHRequest", output = "http://web.service.fileloader.tc.com/TLS/sendACHResponse", fault = {
        @FaultAction(className = WSServiceException.class, value = "http://web.service.fileloader.tc.com/TLS/sendACH/Fault/WSServiceException")
    })
    public TransactionLoaderReply sendACH(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "aba", targetNamespace = "")
        String aba,
        @WebParam(name = "dda", targetNamespace = "")
        String dda,
        @WebParam(name = "accountType", targetNamespace = "")
        String accountType,
        @WebParam(name = "locationId", targetNamespace = "")
        int locationId,
        @WebParam(name = "amount", targetNamespace = "")
        String amount,
        @WebParam(name = "depositName", targetNamespace = "")
        String depositName,
        @WebParam(name = "creditOrDebit", targetNamespace = "")
        String creditOrDebit)
        throws WSServiceException
    ;

    /**
     * 
     * @param username
     * @param deposit
     * @param password
     * @return
     *     returns com.smartbt.vtsuite.boundary.ws.TlsiclResponse
     * @throws WSServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendICL", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.SendICL")
    @ResponseWrapper(localName = "sendICLResponse", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.SendICLResponse")
    @Action(input = "http://web.service.fileloader.tc.com/TLS/sendICLRequest", output = "http://web.service.fileloader.tc.com/TLS/sendICLResponse", fault = {
        @FaultAction(className = WSServiceException.class, value = "http://web.service.fileloader.tc.com/TLS/sendICL/Fault/WSServiceException")
    })
    public TlsiclResponse sendICL(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "deposit", targetNamespace = "")
        Deposit deposit)
        throws WSServiceException
    ;

    /**
     * 
     * @param aba
     * @param dda
     * @param username
     * @param name
     * @param locationId
     * @param accountType
     * @param password
     * @return
     *     returns com.smartbt.vtsuite.boundary.ws.TransactionLoaderReply
     * @throws WSServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "registerCustomer", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.RegisterCustomer")
    @ResponseWrapper(localName = "registerCustomerResponse", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.RegisterCustomerResponse")
    @Action(input = "http://web.service.fileloader.tc.com/TLS/registerCustomerRequest", output = "http://web.service.fileloader.tc.com/TLS/registerCustomerResponse", fault = {
        @FaultAction(className = WSServiceException.class, value = "http://web.service.fileloader.tc.com/TLS/registerCustomer/Fault/WSServiceException")
    })
    public TransactionLoaderReply registerCustomer(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "aba", targetNamespace = "")
        String aba,
        @WebParam(name = "dda", targetNamespace = "")
        String dda,
        @WebParam(name = "accountType", targetNamespace = "")
        String accountType,
        @WebParam(name = "locationId", targetNamespace = "")
        String locationId)
        throws WSServiceException
    ;

    /**
     * 
     * @param aba
     * @param username
     * @param password
     * @return
     *     returns com.smartbt.vtsuite.boundary.ws.LookupBankRes
     * @throws WSServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "lookupBank", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.LookupBank")
    @ResponseWrapper(localName = "lookupBankResponse", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.LookupBankResponse")
    @Action(input = "http://web.service.fileloader.tc.com/TLS/lookupBankRequest", output = "http://web.service.fileloader.tc.com/TLS/lookupBankResponse", fault = {
        @FaultAction(className = WSServiceException.class, value = "http://web.service.fileloader.tc.com/TLS/lookupBank/Fault/WSServiceException")
    })
    public LookupBankRes lookupBank(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "aba", targetNamespace = "")
        String aba)
        throws WSServiceException
    ;

    /**
     * 
     * @param username
     * @param reason
     * @param locationId
     * @param depositId
     * @param password
     * @return
     *     returns com.smartbt.vtsuite.boundary.ws.TransactionLoaderReply
     * @throws ServiceException_Exception
     * @throws WSServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cancelACH", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.CancelACH")
    @ResponseWrapper(localName = "cancelACHResponse", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.CancelACHResponse")
    @Action(input = "http://web.service.fileloader.tc.com/TLS/cancelACHRequest", output = "http://web.service.fileloader.tc.com/TLS/cancelACHResponse", fault = {
        @FaultAction(className = WSServiceException.class, value = "http://web.service.fileloader.tc.com/TLS/cancelACH/Fault/WSServiceException"),
        @FaultAction(className = ServiceException_Exception.class, value = "http://web.service.fileloader.tc.com/TLS/cancelACH/Fault/ServiceException")
    })
    public TransactionLoaderReply cancelACH(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "depositId", targetNamespace = "")
        String depositId,
        @WebParam(name = "locationId", targetNamespace = "")
        String locationId,
        @WebParam(name = "reason", targetNamespace = "")
        String reason)
        throws ServiceException_Exception, WSServiceException
    ;

    /**
     * 
     * @param amount
     * @param username
     * @param customerId
     * @param depositName
     * @param password
     * @param creditOrDebit
     * @return
     *     returns com.smartbt.vtsuite.boundary.ws.TransactionLoaderReply
     * @throws WSServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendACHCustomer", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.SendACHCustomer")
    @ResponseWrapper(localName = "sendACHCustomerResponse", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.SendACHCustomerResponse")
    @Action(input = "http://web.service.fileloader.tc.com/TLS/sendACHCustomerRequest", output = "http://web.service.fileloader.tc.com/TLS/sendACHCustomerResponse", fault = {
        @FaultAction(className = WSServiceException.class, value = "http://web.service.fileloader.tc.com/TLS/sendACHCustomer/Fault/WSServiceException")
    })
    public TransactionLoaderReply sendACHCustomer(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "customerId", targetNamespace = "")
        String customerId,
        @WebParam(name = "amount", targetNamespace = "")
        String amount,
        @WebParam(name = "depositName", targetNamespace = "")
        String depositName,
        @WebParam(name = "creditOrDebit", targetNamespace = "")
        String creditOrDebit)
        throws WSServiceException
    ;

    /**
     * 
     * @param checkSerialNumber
     * @param companyDescription
     * @param discretionaryData
     * @param password
     * @param terminalState
     * @param amount
     * @param username
     * @param customerId
     * @param traceNumber
     * @param depositName
     * @param entryClassCode
     * @param lineItem
     * @param terminalCity
     * @param addenda
     * @param effectiveDate
     * @param creditOrDebit
     * @return
     *     returns com.smartbt.vtsuite.boundary.ws.TransactionLoaderReply
     * @throws WSServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendDetailedACHCustomer", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.SendDetailedACHCustomer")
    @ResponseWrapper(localName = "sendDetailedACHCustomerResponse", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.SendDetailedACHCustomerResponse")
    @Action(input = "http://web.service.fileloader.tc.com/TLS/sendDetailedACHCustomerRequest", output = "http://web.service.fileloader.tc.com/TLS/sendDetailedACHCustomerResponse", fault = {
        @FaultAction(className = WSServiceException.class, value = "http://web.service.fileloader.tc.com/TLS/sendDetailedACHCustomer/Fault/WSServiceException")
    })
    public TransactionLoaderReply sendDetailedACHCustomer(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "customerId", targetNamespace = "")
        String customerId,
        @WebParam(name = "amount", targetNamespace = "")
        String amount,
        @WebParam(name = "depositName", targetNamespace = "")
        String depositName,
        @WebParam(name = "creditOrDebit", targetNamespace = "")
        String creditOrDebit,
        @WebParam(name = "entryClassCode", targetNamespace = "")
        String entryClassCode,
        @WebParam(name = "checkSerialNumber", targetNamespace = "")
        String checkSerialNumber,
        @WebParam(name = "addenda", targetNamespace = "")
        String addenda,
        @WebParam(name = "traceNumber", targetNamespace = "")
        String traceNumber,
        @WebParam(name = "discretionaryData", targetNamespace = "")
        String discretionaryData,
        @WebParam(name = "companyDescription", targetNamespace = "")
        String companyDescription,
        @WebParam(name = "terminalCity", targetNamespace = "")
        String terminalCity,
        @WebParam(name = "terminalState", targetNamespace = "")
        String terminalState,
        @WebParam(name = "effectiveDate", targetNamespace = "")
        String effectiveDate,
        @WebParam(name = "lineItem", targetNamespace = "")
        List<LineItem> lineItem)
        throws WSServiceException
    ;

    /**
     * 
     * @param aba
     * @param companyDescription
     * @param dda
     * @param checkSerialNumber
     * @param discretionaryData
     * @param locationId
     * @param password
     * @param terminalState
     * @param amount
     * @param username
     * @param traceNumber
     * @param depositName
     * @param entryClassCode
     * @param name
     * @param accountType
     * @param lineItem
     * @param terminalCity
     * @param addenda
     * @param effectiveDate
     * @param creditOrDebit
     * @return
     *     returns com.smartbt.vtsuite.boundary.ws.TransactionLoaderReply
     * @throws WSServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendDetailedACH", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.SendDetailedACH")
    @ResponseWrapper(localName = "sendDetailedACHResponse", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.SendDetailedACHResponse")
    @Action(input = "http://web.service.fileloader.tc.com/TLS/sendDetailedACHRequest", output = "http://web.service.fileloader.tc.com/TLS/sendDetailedACHResponse", fault = {
        @FaultAction(className = WSServiceException.class, value = "http://web.service.fileloader.tc.com/TLS/sendDetailedACH/Fault/WSServiceException")
    })
    public TransactionLoaderReply sendDetailedACH(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "aba", targetNamespace = "")
        String aba,
        @WebParam(name = "dda", targetNamespace = "")
        String dda,
        @WebParam(name = "accountType", targetNamespace = "")
        String accountType,
        @WebParam(name = "locationId", targetNamespace = "")
        int locationId,
        @WebParam(name = "amount", targetNamespace = "")
        String amount,
        @WebParam(name = "depositName", targetNamespace = "")
        String depositName,
        @WebParam(name = "creditOrDebit", targetNamespace = "")
        String creditOrDebit,
        @WebParam(name = "entryClassCode", targetNamespace = "")
        String entryClassCode,
        @WebParam(name = "checkSerialNumber", targetNamespace = "")
        String checkSerialNumber,
        @WebParam(name = "addenda", targetNamespace = "")
        String addenda,
        @WebParam(name = "traceNumber", targetNamespace = "")
        String traceNumber,
        @WebParam(name = "discretionaryData", targetNamespace = "")
        String discretionaryData,
        @WebParam(name = "companyDescription", targetNamespace = "")
        String companyDescription,
        @WebParam(name = "terminalCity", targetNamespace = "")
        String terminalCity,
        @WebParam(name = "terminalState", targetNamespace = "")
        String terminalState,
        @WebParam(name = "effectiveDate", targetNamespace = "")
        String effectiveDate,
        @WebParam(name = "lineItem", targetNamespace = "")
        List<LineItem> lineItem)
        throws WSServiceException
    ;

    /**
     * 
     * @param customerItemId
     * @param amount
     * @param username
     * @param depositName
     * @param tiffImage
     * @param auxFields
     * @param highQualityImage
     * @param locationId
     * @param micr
     * @param password
     * @return
     *     returns com.smartbt.vtsuite.boundary.ws.TlsiclResponse
     * @throws WSServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sendSingleICL", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.SendSingleICL")
    @ResponseWrapper(localName = "sendSingleICLResponse", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.SendSingleICLResponse")
    @Action(input = "http://web.service.fileloader.tc.com/TLS/sendSingleICLRequest", output = "http://web.service.fileloader.tc.com/TLS/sendSingleICLResponse", fault = {
        @FaultAction(className = WSServiceException.class, value = "http://web.service.fileloader.tc.com/TLS/sendSingleICL/Fault/WSServiceException")
    })
    public TlsiclResponse sendSingleICL(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "locationId", targetNamespace = "")
        int locationId,
        @WebParam(name = "amount", targetNamespace = "")
        String amount,
        @WebParam(name = "depositName", targetNamespace = "")
        String depositName,
        @WebParam(name = "micr", targetNamespace = "")
        String micr,
        @WebParam(name = "customerItemId", targetNamespace = "")
        String customerItemId,
        @WebParam(name = "tiffImage", targetNamespace = "")
        Image tiffImage,
        @WebParam(name = "highQualityImage", targetNamespace = "")
        Image highQualityImage,
        @WebParam(name = "auxFields", targetNamespace = "")
        List<AuxField> auxFields)
        throws WSServiceException
    ;

    /**
     * 
     * @param checkId
     * @param username
     * @param password
     * @param note
     * @return
     *     returns boolean
     * @throws WSServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ineligibleICL", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.IneligibleICL")
    @ResponseWrapper(localName = "ineligibleICLResponse", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.IneligibleICLResponse")
    @Action(input = "http://web.service.fileloader.tc.com/TLS/ineligibleICLRequest", output = "http://web.service.fileloader.tc.com/TLS/ineligibleICLResponse", fault = {
        @FaultAction(className = WSServiceException.class, value = "http://web.service.fileloader.tc.com/TLS/ineligibleICL/Fault/WSServiceException")
    })
    public boolean ineligibleICL(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "checkId", targetNamespace = "")
        long checkId,
        @WebParam(name = "note", targetNamespace = "")
        String note)
        throws WSServiceException
    ;

    /**
     * 
     * @param getCheckImageRequest
     * @return
     *     returns com.smartbt.vtsuite.boundary.ws.GetCheckImageRes
     * @throws WSServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCheckImage", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.GetCheckImage")
    @ResponseWrapper(localName = "getCheckImageResponse", targetNamespace = "http://web.service.fileloader.tc.com/", className = "com.smartbt.vtsuite.boundary.ws.GetCheckImageResponse")
    @Action(input = "http://web.service.fileloader.tc.com/TLS/getCheckImageRequest", output = "http://web.service.fileloader.tc.com/TLS/getCheckImageResponse", fault = {
        @FaultAction(className = WSServiceException.class, value = "http://web.service.fileloader.tc.com/TLS/getCheckImage/Fault/WSServiceException")
    })
    public GetCheckImageRes getCheckImage(
        @WebParam(name = "getCheckImageRequest", targetNamespace = "")
        GetCheckImageRequest getCheckImageRequest)
        throws WSServiceException
    ;

}
